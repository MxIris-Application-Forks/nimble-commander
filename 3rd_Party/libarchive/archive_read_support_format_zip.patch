diff --git a/libarchive/archive_read_support_format_zip.c b/libarchive/archive_read_support_format_zip.c
index 21d41cc0..5ad2e121 100644
--- a/libarchive/archive_read_support_format_zip.c
+++ b/libarchive/archive_read_support_format_zip.c
@@ -3777,18 +3777,29 @@ slurp_central_directory(struct archive_read *a, struct archive_entry* entry,
 			} else {
 				/* Generate resource fork name to find its
 				 * resource file at zip->tree_rsrc. */
-				archive_strcpy(&(zip_entry->rsrcname),
-				    "__MACOSX/");
-				archive_strncat(&(zip_entry->rsrcname),
-				    name, r - name);
-				archive_strcat(&(zip_entry->rsrcname), "._");
-				archive_strncat(&(zip_entry->rsrcname),
-				    name + (r - name),
-				    filename_length - (r - name));
-				/* Register an entry to RB tree to sort it by
-				 * file offset. */
-				__archive_rb_tree_insert_node(&zip->tree,
-				    &zip_entry->node);
+                if(name[filename_length-1] != '/' )
+                {
+                    archive_strcpy(&(zip_entry->rsrcname), "__MACOSX/");
+                    archive_strncat(&(zip_entry->rsrcname), name, r - name);
+                    archive_strcat(&(zip_entry->rsrcname), "._");
+                    archive_strncat(&(zip_entry->rsrcname),
+                                    name + (r - name), filename_length - (r - name));
+                }
+                else
+                {
+                    /* special case for directories to produce rsrc name - need to cut out last slash*/
+                    const char *base = name + filename_length - 2;
+                    for(; base > name && *base != '/'; --base);
+                    if(*base == '/') ++base;
+                    archive_strcpy(&(zip_entry->rsrcname), "__MACOSX/");
+                    archive_strncat(&(zip_entry->rsrcname), name, base - name);
+                    archive_strcat(&(zip_entry->rsrcname), "._");
+                    archive_strncat(&(zip_entry->rsrcname), base, filename_length - (base - name) - 1);
+                }
+                /* Register an entry to RB tree to sort it by
+                 * file offset. */
+                __archive_rb_tree_insert_node(&zip->tree,
+                                              &zip_entry->node);
 			}
 		}
 
